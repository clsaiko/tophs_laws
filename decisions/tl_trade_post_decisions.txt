# Trade post decisions are possible vs _all_ trade posts and are shown in the Settlement Diplomacy View, not the Intrigue View. The taker is in the FROM scope. ROOT is the province
#
# filter = [capital/owned/vassal_owned/sub_realm_owned/realm_owned/dynasty_owned]
# ai_target_filter = [capital/owned/vassal_owned/sub_realm_owned/realm_owned/dynasty_owned] (which trade posts for which the AI evaluates the decision.)
#	owned: all trade posts owned by the AI
#	vassal_owned: all trade posts owned by direct vassal rulers of the AI's employer
#	sub_realm_owned: all trade posts below the AI's employer
#	realm_owned: all trade posts in the same top realm as the AI
#	dynasty_owned: all trade posts owned by members of the same dynasty
#	

trade_post_decisions = {

	tl_imperial_seize_trade_post = {
		only_playable = yes
		filter = sub_realm_owned
		ai_target_filter = sub_realm_owned
		ai = no
		
		from_potential = {
            #Conditions on the decision taker for the decision to appear. Not taken into account when filter = self, use potential instead.
            ai = no
			OR = {
				has_law = tl_trade_auth_law_1	# liege must have a relevant law
				has_law = tl_byz_trade_auth_law_1
				has_law = tl_byz_trade_auth_law_2
			}
			
		}
		
		potential = {
            #Conditions on the targeted character for the decision to appear
			# Owner is not the ruler
			trade_post_owner = {
				NOT = { character = FROM }
			}
		}
		
		allow = {
            #Conditions for the decision to be enabled

			FROM = {
                prestige = 250              #decision taker has enough prestige
                completely_controls = ROOT  #decision taker completely controls the province
				num_of_trade_posts <= 20	#hard cap of 20
            } #end FROM block

			trade_post_owner = {			#trade post owner can't be at war
				war = no
				NOT = { has_non_aggression_pact_with = FROM } #current owner can't be in a NAP with me
			}

			FROM = {
				
				OR = {
					any_demesne_province = {	#once reached here assume we're in trade post runaway to 20
						count >= 7
						trade_post_has_building = tl_tp_adm_post_1
					}
	
					#this is ugly, but the trade post limit isn't exposed as a condition in code, so no way to work with it										

					num_of_trade_posts < 1

					AND = {
						capital_scope = { TECH_TRADE_PRACTICES >= 8 }
						OR = {
							num_of_trade_posts < 8
							AND = {
								any_demesne_province = {
									count = 6
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 17
							}
							AND = {
								any_demesne_province = {
									count = 5
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 15
							}
							AND = {
								any_demesne_province = {
									count = 4
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 14
							}
							AND = {
								any_demesne_province = {
									count = 3
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 12
							}
							AND = {
								any_demesne_province = {
									count = 2
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 11
							}
							AND = {
								any_demesne_province = {
									count = 1
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 9
							}
						}
					}
					AND = {
						capital_scope = { TECH_TRADE_PRACTICES >= 7 }
						OR = {
							num_of_trade_posts < 7
							AND = {
								any_demesne_province = {
									count = 6
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 15
							}
							AND = {
								any_demesne_province = {
									count = 5
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 14
							}
							AND = {
								any_demesne_province = {
									count = 4
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 13
							}
							AND = {
								any_demesne_province = {
									count = 3
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 11
							}
							AND = {
								any_demesne_province = {
									count = 2
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 10
							}
						}
					}
					AND = {
						capital_scope = { TECH_TRADE_PRACTICES >= 6 }
						OR = {
							num_of_trade_posts < 7
							AND = {
								any_demesne_province = {
									count = 6
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 14
							}
							AND = {
								any_demesne_province = {
									count = 5
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 13
							}
							AND = {
								any_demesne_province = {
									count = 4
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 12
							}
							AND = {
								any_demesne_province = {
									count = 2
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 9
							}
							AND = {
								any_demesne_province = {
									count = 1
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 8
							}
						}
					}
					AND = {
						capital_scope = { TECH_TRADE_PRACTICES >= 5 }
						OR = {
							num_of_trade_posts < 7
							AND = {
								any_demesne_province = {
									count = 6
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 13
							}
							AND = {
								any_demesne_province = {
									count = 5
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 12
							}
							AND = {
								any_demesne_province = {
									count = 4
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 11
							}
							AND = {
								any_demesne_province = {
									count = 3
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 10
							}
							AND = {
								any_demesne_province = {
									count = 2
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 8
							}
							AND = {
								any_demesne_province = {
									count = 1
									trade_post_has_building = tl_tp_adm_post_1
								}
								num_of_trade_posts < 7
							}
						}
					}
					AND = {
						capital_scope = { TECH_TRADE_PRACTICES >= 4 }
						num_of_trade_posts < 6
					}
					AND = {
						capital_scope = { TECH_TRADE_PRACTICES >= 3 }
						num_of_trade_posts < 5
					}
					AND = {
						capital_scope = { TECH_TRADE_PRACTICES >= 2 }
						num_of_trade_posts < 3
					}
					AND = {
						capital_scope = { TECH_TRADE_PRACTICES >= 1 }
						num_of_trade_posts < 2
					}
				} #end OR block
			} #end FROM block
		} #end allow block
		effect = {
            #Commands executed when taking the decision

			#Former trade post owner is furious
			trade_post_owner = {
				opinion = {
					modifier = opinion_furious
					who = FROM
					years = 10
				}
			}

			#Seize trade post
			seize_trade_post = FROM

			FROM = {
				prestige = -250					#Cost
				add_character_modifier = {      #vassals are upset
					modifier = tl_seize_tradepost_modifier
					years = 5
					stacking = yes
			}
			}
		}
		revoke_allowed = {
			always = no
		}
		
		ai_will_do = {
			factor = 0
		}
	}	
}